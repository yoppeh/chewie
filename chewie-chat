#!/bin/bash
#
# chewie-chat 
#
# wrapper that uses chewie to implement a general-purpose chat bot.
#

echo "Setting up chewie-chat... "
if [ "$CHEWIE_API" == "ollama" ]; then
CHEWIECHAT_MODEL="llama2-uncensored:latest"
echo "Using ollama API"
elif [ "$CHEWIE_API" == "openai" ]; then
CHEWIECHAT_MODEL="gpt-3.5-turbo"
echo "Using OpenAI API"
elif [ "$CHEWIE_API" == "groq" ] ; then
echo "Using Groq API"
CHEWIECHAT_MODEL="llama3-8b-8192"
else
CHEWIE_API=ollama
CHEWIECHAT_MODEL="llama2-uncensored:latest"
echo "Using ollama API"
fi
echo "Using API \"$CHEWIE_API\""
echo "Using model \"$CHEWIECHAT_MODEL\""

CHEWIECHAT_CONTEXT_FILENAME=chewie-chat-context.json
CHEWIECHAT_CONTEXT_PATH=~/.cache/chewie
export CHEWIECHAT_CONTEXT_FILE=$CHEWIECHAT_CONTEXT_PATH/$CHEWIECHAT_CONTEXT_FILENAME

echo "Using context file \"$CHEWIECHAT_CONTEXT_FILE\""
mkdir -p $CHEWIECHAT_CONTEXT_PATH

echo "Press Ctrl-C to exit."

while [ 1 ] ; do
    read -p "$USER > " input
    if [ x"$input" == "x/h" ] ; then
        echo "commands:"
        echo "/h - help (this) text"
        echo "/l - show context history"
        echo "/q - quit"
        echo "/r - reset context file"
        continue
    elif [ x"$input" == "x/l" ] ; then
        chewie ctx="$CHEWIECHAT_CONTEXT_FILE" his
        continue
    elif [ x"$input" == "x/q" ] ; then
        exit 0
    elif [ x"$input" == "x/r" ] ; then
        echo "Resetting context..."
        chewie r u mdl="$CHEWIECHAT_MODEL" ctx="$CHEWIECHAT_CONTEXT_FILE" > /dev/null
        echo "context file reset"
        continue
    fi
    echo -n "chewie > "
    echo "$input" | chewie mdl="$CHEWIECHAT_MODEL" ctx="$CHEWIECHAT_CONTEXT_FILE"
done

